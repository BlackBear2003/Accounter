<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="host.luke.api.dao.ConsumptionMapper">
    <select id="getConsByUserId" parameterType="Long" resultType="host.luke.common.pojo.Consumption">
        select *
        from t_consumption where consumption_id in
                          (select consumption_id from t_user_consumption where user_id = #{userId} )
    </select>

    <insert id="addCons" parameterType="Long">
        insert into t_user_consumption (user_id,consumption_id)
        values (#{userId},#{consumptionId})
    </insert>

    <select id="findConsOwner" parameterType="Long" resultType="Long">
        select user_id from t_user_consumption where consumption_id = #{consumption_id}
    </select>

    <select id="getBalanceOfAll" parameterType="Long" resultType="Double">
        select sum(amount)
        from t_consumption
        where consumption_id in (select consumption_id from t_user_consumption where user_id = #{userId} );
    </select>

    <select id="getBalanceOfDateTime" resultType="Double">
        select sum(amount)
        from t_consumption
        where (consume_time between #{startDate} and #{endDate})
          and ( consumption_id in (select consumption_id from t_user_consumption where user_id = #{userId} ));
    </select>

    <select id="getOutPaidOfAll" parameterType="Long" resultType="Double">
        select sum(amount)
        from t_consumption
        where 0 > amount AND consumption_id in (select consumption_id from t_user_consumption where user_id = #{userId} );
    </select>

    <select id="getOutPaidOfDateTime" resultType="Double">
        select sum(amount)
        from t_consumption
        where 0 > amount AND (consume_time between #{startDate} and #{endDate})
          and ( consumption_id in (select consumption_id from t_user_consumption where user_id = #{userId} ));
    </select>

    <select id="getInEarnedOfAll" parameterType="Long" resultType="Double">
        select sum(amount)
        from t_consumption
        where amount > 0 AND consumption_id in (select consumption_id from t_user_consumption where user_id = #{userId} );
    </select>

    <select id="getInEarnedOfDateTime" resultType="Double">
        select sum(amount)
        from t_consumption
        where amount > 0 AND (consume_time between #{startDate} and #{endDate})
          and ( consumption_id in (select consumption_id from t_user_consumption where user_id = #{userId} ));
    </select>


</mapper>